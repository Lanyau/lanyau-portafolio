[
  {
    "objectID": "proyects_Blog.html",
    "href": "proyects_Blog.html",
    "title": "Proyectos",
    "section": "",
    "text": "Visualización de la pluma del río Amazonas, con datos NetCDF\n\n\n\nGIS\n\nR\n\nNetCDF\n\nOceanología\n\n\n\n\n\n\n\n\n\nApr 27, 2025\n\n\nRamon David P. Lanyau\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sobre mi",
    "section": "",
    "text": "Master en Manejo en Ciencias de Recursos Marinos\nAnalista de datos con sólido dominio en procesamiento, visualización y SIG. En constante formación, aplico técnicas estadísticas y de machine learning, incluyendo enfoques geoespaciales, para transformar datos en decisiones estratégicas."
  },
  {
    "objectID": "index.html#habilidades",
    "href": "index.html#habilidades",
    "title": "Sobre mi",
    "section": "Habilidades",
    "text": "Habilidades\n\n\n\nHabilidades, programas, lenguajes de programación, módulos\n\n\n\nPython (pandas, numpy, scikit-learn), SQL ,R, QGIS, Google Earth Engine, Git y GitHub"
  },
  {
    "objectID": "index.html#certificaciones.",
    "href": "index.html#certificaciones.",
    "title": "Sobre mi",
    "section": "Certificaciones.",
    "text": "Certificaciones.\n\nPython\n\n“Python for Benginners” by Sololearn: [ver certificado]\n“Intermediate Python” by Sololearn: [ver certificado]\n“Python” de Kaggle: [ver certificado]\n“Pandas” de Kaggle: [ver certificado]\n“Machine Learning with Python - Level 1 by IBM”: [ver certificado]\n\n\n\nR\n\n“Theorical and Practical Understanding of R languaje” by Sololearn: [ver certificado]\n\n\n\nSQL\n\n“Intro to SQL”, de Kaggle: [ver certificado]\n“Introducción a SQL”, de Sololean: [ver certificado]\n“SQL intermedio”, de Sololearn: [ver certificado]\n\n\n\nEstadística, Ciencia de datos, Analisis de datos\n\n“Time Series Workshop” by CICIMAR-IPN: [ver certificado]\n“Data Science: Python for Data Analysis Full Bootcamp” by UDEMY: [ver certificado]\n“Data Analysis with R Programming and Python”: [ver certificado]\n“Free Tensor-Flow Keras Bootcamp” de OpenCV: [ver certificado]\n\n\n\nArcGIS ,QGIS, SNAP\n\n“Spatial Data Science: The New Frontier in Analytics” de ESRI: [ver certificado]\n“Optical Remote Sensing - Introductory Level” de “National Commission on Space Activities (CONAE)”: [ver certificado]\n“Teledetección aplicada al Color del Océano - Nivel Introductorio” de CONAE: [ver certificado]\n“Methane Observations for Large Emission Event Detection and Monitoring”: [ver certificado]\n\n\n\nGoogle Earth Engine, Python\n\n“The Complete Google Earth Engine Python API & Colab Bootcamp” de UDEMY: [ver certificado]\n\n\n\nGit, GitHub\n\n“Basics of Git, GITHUB” de Desafío Latam: [ver certificado]\n\n\n\nMatLab\n\n“MatLab Onramp” de MathWorks: [ver certificado]"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Logros",
    "section": "",
    "text": "Denis Ávila, D., Curbelo, E. A., Madrigal-Roca, L. J., & Pérez-Lanyau, R. D. (2020). Spatio temporal variations of the spectral response in mangroves of Havana, Cuba, by remote sensing. Revista De Biología Tropical, 68(1), 321–335. https://doi.org/10.15517/rbt.v68i1.39134\nDenis Ávila, D., Ramírez-Arrieta, V. M., & Pérez-Lanyau, R. D. (2020). Variación espacial de la morfometría foliar en manglares de La Habana, Cuba. Rev. Biol. Trop., 68, 13. http://dx.doi.org/10.15517/rbt.v68i2.39133\nPérez-Leira, R., Pérez-Ojeda, O. L., Pérez-Ojeda, O. M., & Pérez-Lanyau, D. (2025). Estudio exploratorio sobre el régimen de riego en una parcela de pitahaya (Hylocereus undatus). Ingeniería Agrícola, 15, https://cu-id.com/2284/v15e04. Recuperado a partir de https://revistas.unah.edu.cu/index.php/IAgric/article/view/2024"
  },
  {
    "objectID": "about.html#publicaciones-científicas",
    "href": "about.html#publicaciones-científicas",
    "title": "Logros",
    "section": "",
    "text": "Denis Ávila, D., Curbelo, E. A., Madrigal-Roca, L. J., & Pérez-Lanyau, R. D. (2020). Spatio temporal variations of the spectral response in mangroves of Havana, Cuba, by remote sensing. Revista De Biología Tropical, 68(1), 321–335. https://doi.org/10.15517/rbt.v68i1.39134\nDenis Ávila, D., Ramírez-Arrieta, V. M., & Pérez-Lanyau, R. D. (2020). Variación espacial de la morfometría foliar en manglares de La Habana, Cuba. Rev. Biol. Trop., 68, 13. http://dx.doi.org/10.15517/rbt.v68i2.39133\nPérez-Leira, R., Pérez-Ojeda, O. L., Pérez-Ojeda, O. M., & Pérez-Lanyau, D. (2025). Estudio exploratorio sobre el régimen de riego en una parcela de pitahaya (Hylocereus undatus). Ingeniería Agrícola, 15, https://cu-id.com/2284/v15e04. Recuperado a partir de https://revistas.unah.edu.cu/index.php/IAgric/article/view/2024"
  },
  {
    "objectID": "about.html#premios",
    "href": "about.html#premios",
    "title": "Logros",
    "section": "Premios",
    "text": "Premios\n\nPrimer Premio, VI Congreso Estudiantil de Investigación Científica y Tecnología (CEICYT) celebrado en la Universidad del Caribe (UNICARIBE) en Santo Domingo, República Dominicana (2021) en el área temática ‘Internacional’, por el trabajo titulado: ‘Evaluación del efecto Isla de calor urbano en ciudades cubanas y sus variaciones históricas.’\nCONVOCATORIA DE SOLICITUDES: Jóvenes Investigadores Estudiantiles 2024 por el Consejo Sudcaliforniano de Ciencia y Tecnología."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "",
    "text": "En esta publicación voy a explicar como hacer una animación de corrientes oceánicas y salinidad con datos en formato NetCDF correspondientes a la desembocadura del río Amazonas con el lenguaje de programación R."
  },
  {
    "objectID": "posts/post-with-code/index.html#activación-de-librerías-de-r-para-manejo-y-visualización-de-datos-geográficos.",
    "href": "posts/post-with-code/index.html#activación-de-librerías-de-r-para-manejo-y-visualización-de-datos-geográficos.",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "Activación de librerías de R para manejo y visualización de datos geográficos.",
    "text": "Activación de librerías de R para manejo y visualización de datos geográficos.\n\n#Empieza aquí el verdadero trabajo \n\nlibrary(ncdf4)\nlibrary(raster)\nlibrary(sp)\nlibrary(sf)\nlibrary(terra)\nlibrary(RColorBrewer)\nlibrary(rasterVis)\nlibrary(spDataLarge)\nlibrary(lwgeom)\nlibrary(mapdata)\nlibrary(latticeExtra)\nlibrary(magick)\nlibrary(RColorBrewer)\nlibrary(scales)\nlibrary(lwgeom)\nlibrary(mapdata)\nlibrary(viridis)"
  },
  {
    "objectID": "posts/post-with-code/index.html#extracción-de-las-variables-del-archivo-netcdf",
    "href": "posts/post-with-code/index.html#extracción-de-las-variables-del-archivo-netcdf",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "Extracción de las variables del archivo NetCDF",
    "text": "Extracción de las variables del archivo NetCDF\nEl archivo NetCDF tiene variables de temperatura, salinidad, batimetría, componente zonal, componente meridional, altimetría y densidad , entre otras. Y las variables globales latitud, longitud, tiempo y profundidad que son datos estructurados en forma de vector y que sirven para darle estructura e indexar a las anteriores variables mencionadas (temperatura, densidad, salinidad etc…) las cuales están estructuradas en formato de arreglo con 4 dimensiones : longitud, latitud, profundidad y tiempo. Este archivo NetCDF puede ser descargado aquí.\n\n#Se especifica la direccion de la base de datos NetCDF\ndirsemanal = \"A:/CICIMAR/Bases de datos/Output file of weekly climatology simulated with the ROMS model (NetCDF standard).nc\"\n#se le asigna a una variable la lectura de esos datos\nsemanal = nc_open(dirsemanal)\n#Se muestra en pantalla las variables que presenta la base de datos,\n#y sus dimensiones\nprint(semanal) #consultando metadatos del fichero\n\nFile A:/CICIMAR/Bases de datos/Output file of weekly climatology simulated with the ROMS model (NetCDF standard).nc (NC_FORMAT_CLASSIC):\n\n     9 variables (excluding dimension variables):\n        double h[lon,lat]   \n            standard_name: Bathymetry\n            long_name: Bathymetry\n            units: m\n            missing_value: NaN\n            FillValue: NaN\n        double ssh[lon,lat,time]   \n            standard_name: SSH\n            long_name: Sea Surface Height\n            units: m\n            missing_value: NaN\n            FillValue: NaN\n        double temp[lon,lat,depth,time]   \n            standard_name: temp\n            long_name: Potential temperature\n            units: degreeC\n            missing_value: NaN\n            FillValue: NaN\n        double salt[lon,lat,depth,time]   \n            standard_name: salt\n            long_name: Salinity\n            units: PSU\n            missing_value: NaN\n            FillValue: NaN\n        double swd[lon,lat,depth,time]   \n            standard_name: Density\n            long_name: Seawater density\n            units: Kg m^-3\n            missing_value: NaN\n            FillValue: NaN\n        double ucurr[lon,lat,depth,time]   \n            standard_name: ucurr\n            long_name: Zonal component\n            units: m s^-1\n            missing_value: NaN\n            FillValue: NaN\n        double vcurr[lon,lat,depth,time]   \n            standard_name: vcurr\n            long_name: Meridional component\n            units: m s^-1\n            missing_value: NaN\n            FillValue: NaN\n        double vort[lon,lat,depth,time]   \n            standard_name: vort\n            long_name: Vorticity\n            units: s^-1\n            missing_value: NaN\n            FillValue: NaN\n        double cspd[lon,lat,depth,time]   \n            standard_name: cspd\n            long_name: Current speed\n            units: m s^-1\n            missing_value: NaN\n            FillValue: NaN\n\n     4 dimensions:\n        lon  Size:183 \n            standard_name: logitude\n            long_name: logitude\n            units: degrees_east\n            axis: X\n        lat  Size:159 \n            standard_name: latitude\n            long_name: latitude\n            units: degrees_north\n            axis: Y\n        depth  Size:61 \n            standard_name: Depth\n            long_name: Vertical axis\n            units: m\n            axis: Z\n        time  Size:48   *** is unlimited *** \n            standard_name: time\n            long_name: time\n            calendar: standard\n            axis: T\n            comment: \n\n    5 global attributes:\n        creation_date: 05-Aug-2022 01:24:56\n        Producer: DOCEAN/UFPE/Recife/PE/Brasil\n        dataType: 2D Grid\n        Comment: ArpHDv2 datasets (standard NetCDF files)\n        Author: H. L. Varona & M. Araujo\n\n#Una vez visto cuales son las cadenas con las que se nombran a las variables globales\n#procedemos a asignarlas a variables para su posterior extracción del archivo NetCDF\nlat_variable = 'lat'\nlon_variable = 'lon'\ntime_variable ='time'\ndeepvariable= 'depth'\n\n# Extracción de las variables globales\nlatssem = ncvar_get(semanal,lat_variable) \nlonssem = ncvar_get(semanal,lon_variable)\ntimessem = ncvar_get(semanal,time_variable)\ndeepseem=ncvar_get(semanal,deepvariable)\n\n\n#En esta publicación solo vamos a usar la salinidad y los componentes zonales y meridionales para visualizar la magnitud y dirección de las corrientes de los datos\nsalisem = ncvar_get(semanal,\"salt\") \nzonal=ncvar_get(semanal,\"ucurr\")\nmeridional=ncvar_get(semanal,\"vcurr\")\n\n\n\n#Definimos un cuadrante de interes: en las longitudes desde -60 hasta los -40.5 , y en las latitudes desde las -3 hasta las 9.5\n\nlon1=-60\nlon2=-40.5\nlat1=-3\nlat2=9.5\n\n\n\n#Debemos saber que índice ocupan nuestras coordenadas de interes en las variables globales, por eso aplicamos wich para obtener dichos índices en las variables globales.\n#Estos índices serán empleados para indexar las variables ambientales (eg. salinidad) en las dimensiones 1 y 2, que corresponden  a las longitudes y latitudes respectivamente. \n\nindlon1=which(lonssem==lon1)\nindlon2=which(lonssem==lon2)\nindlat1=which(latssem==lat1)\nindlat2=which(latssem==lat2)\n\n\n#Acotando el rango de las variables de latitudes y longitudes para que pueda ser empleado correctamente con las funciones de rastervis\n\n\n#De las variables globales longitud y latitud vamos a extraer unas secciones de estas\n#correspondientes a nuestra region de interes\n#Estos vectores ranlon y ranlat serán utilizados posteriormente para georeferenciar los rasters que se elaboran a partir de las matrices o arreglos de la variable salinidad\nranlon=lonssem[indlon1:indlon2]\nranlat=latssem[indlat1:indlat2]"
  },
  {
    "objectID": "posts/post-with-code/index.html#acote-de-área-de-interes-rasterización-y-georeferenciación-de-las-capas-de-salinidad",
    "href": "posts/post-with-code/index.html#acote-de-área-de-interes-rasterización-y-georeferenciación-de-las-capas-de-salinidad",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "Acote de área de interes, rasterización y georeferenciación de las capas de salinidad",
    "text": "Acote de área de interes, rasterización y georeferenciación de las capas de salinidad\nUna vez tenemos las 48 capas de tiempo de la variable de salinidad rasterizada y georeferenciada, podemos proceder a visualizar la capa numero 24 de 48. La cual podemos acceder a ella dentro del elemento 24 de la lista vacía creada para almacenar los rasteres georeferenciados de salinidad\n\n#Creamos una secuencia que se usará para asignar rangos a la variable de salinidad.\n#Desde los 24 UPS (Unidades prácticas de salinidad), hasta los 38 UPS, con saltos de 1.5 UPS\natsal&lt;- seq(24,38,1.5)\n#Le agregamos un título a la leyenda de la escala de colores\nColorkeySal &lt;- list(title=list(\"UPS\"))\n\nlevelplot(lista_vacia[[24]],at=atsal,colorkey = ColorkeySal,par.settings = viridisTheme(region = viridis(10)),margin=FALSE)+ \n  #Se añade una capa a la visualización, correspondiente al shp importado\n    layer(sp.polygons(cntry_sp_wgs84, fill = \"#b28158\"))\n\n\n\n\n\n\n\n\nFigura 1: Visualización de la salinidad en el área de interes para la capa 24."
  },
  {
    "objectID": "posts/post-with-code/index.html#acote-de-área-de-interes-rasterización-y-georeferenciación-de-las-capas-de-componente-zonal-y-meridional",
    "href": "posts/post-with-code/index.html#acote-de-área-de-interes-rasterización-y-georeferenciación-de-las-capas-de-componente-zonal-y-meridional",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "Acote de área de interes, rasterización y georeferenciación de las capas de componente zonal y meridional",
    "text": "Acote de área de interes, rasterización y georeferenciación de las capas de componente zonal y meridional\n\n##########Creando mapa de dirección de corrientes\n\n\n#Realizamos un acote del área interes nuevamente, pero para las variables de componente zonal y componente meridional \nu=zonal[indlon1:indlon2,indlat1:indlat2,1,]\nv=meridional[indlon1:indlon2,indlat1:indlat2,1,]\n\n\n# Creamos nuevamente listas vacías para las variables de componente zonal y meridional\n\n# Creando una lista vacía con 48 elementos\nlistaU &lt;- vector(\"list\", length = 48)\n# Creando una lista vacía con 48 elementos\nlistaV &lt;- vector(\"list\", length = 48)\n\n\nfor(i in 1:48){\n  #Se rota cada elemento zonal y meridional \n  listaU[[i]] &lt;- apply(t(u[,,i]),2,rev)\n  listaV[[i]] &lt;-apply(t(v[,,i]),2,rev)\n\n  # Se convierte a raster cada elemento de la lista\n  listaU[[i]]=raster(listaU[[i]])\n  listaV[[i]]=raster(listaV[[i]])\n  #Se georeferencia cada elemento raster de las listas vacías con las coordenadas correspondientes a la región de interes\n  extent(listaU[[i]]) &lt;- extent(c(lon1,lon2,lat1,lat2))\n  extent(listaV[[i]]) &lt;- extent(c(lon1,lon2,lat1,lat2)) \n  }"
  },
  {
    "objectID": "posts/post-with-code/index.html#creación-de-una-animación-a-partir-de-las-48-visualizaciones-de-salinidad-y-corrientes-superficiales",
    "href": "posts/post-with-code/index.html#creación-de-una-animación-a-partir-de-las-48-visualizaciones-de-salinidad-y-corrientes-superficiales",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "Creación de una animación a partir de las 48 visualizaciones de salinidad y corrientes superficiales",
    "text": "Creación de una animación a partir de las 48 visualizaciones de salinidad y corrientes superficiales\n\n#creamos un vecor con los nombres de los meses de un año, y que cada mes se repita 4 veces consecutivas, para asignar un mes a cada promedio semanal de las 48 capas de tiempo del archivo\nmeses=rep(c(\"enero\",\"febrero\",\"marzo\",\"abril\",\"mayo\",\"junio\",\"julio\",\"agosto\",\"septiembre\",\"octubre\",\"noviembre\",\"diciembre\"),each=4)\n\n# Inicializar una lista para almacenar cada frame del GIF\nframes &lt;- list()\n\nfor (i in 1:48) {\n  #Se introduce en un brick, al iEsimo componente zonal y meridional  que posteriormente la funcion levelplot usara para calcular la magnitud y velocidad de corrientes con ese brick\n  w &lt;- brick(listaU[[i]], listaV[[i]])\n  \n  #Al objeto w lo multiplicamos por 10 para acentuar las diferencias entre los vectores de las corrientes, como en esta gráfica el tamaño del vector no significa una velocidad específca y solo es representativo de su magnitud se acepta en este caso la multiplicación x 10.\n  u &lt;- vectorplot(w*10, isField = \"dXY\", \n                  par.settings = viridisTheme(region = viridis(10)),\n                  scaleSlope = FALSE, \n                  at = atsal, \n                  region = lista_vacia[[i]], \n                  colorkey = ColorkeySal, \n                  margin = FALSE, \n                  narrows = 1000,\n                  col.arrows = \"black\",\n                  main = paste(\"Dirección y magnitud de corrientes (m/s) y grado de salinidad, \\n mes: \",meses[i], \", semana: \", i,\"/48\", sep = \"\"),\n                  scales = list(\n                    y = list(\n                      at = c(2, 5, 8),\n                      labels = c(\"2\", \"5\", \"8\")\n                    )\n                  )) + \n    layer(sp.polygons(cntry_sp_wgs84, fill = \"#b28158\"))\n  \n  # Guardar cada plot como imagen temporal\n  png(filename = paste0(\"frame_\", sprintf(\"%02d\", i), \".png\"), width = 800, height = 600)\n  print(u)\n  dev.off()\n  \n  # Leer la imagen y añadirla a la lista de frames\n  frames[[i]] &lt;- image_read(paste0(\"frame_\", sprintf(\"%02d\", i), \".png\"))\n}\n\n# Combinar todos los frames en un GIF\ngif &lt;- image_animate(image_join(frames), fps = 5)  # 5 frames por segundo\n\n# Guardar el GIF\nimage_write(gif, \"corrientes_salinidad.gif\")\n\n\n# Opcional: Eliminar los archivos PNG temporales\nfile.remove(list.files(pattern = \"frame_.*\\\\.png\"))\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[46] TRUE TRUE TRUE\n\n\n\n\n\nFigura 2: Secuencia de imagenes de corrientes superficiales y salinidad de la pluma del río Amazonas"
  },
  {
    "objectID": "posts/post-with-code/index.html#referencias",
    "href": "posts/post-with-code/index.html#referencias",
    "title": "Visualización de la pluma del río Amazonas, con datos NetCDF",
    "section": "Referencias",
    "text": "Referencias\nR Core Team (2024). R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing, Vienna, Austria. https://www.R-project.org.\nVarona, H. L., & Araujo, M. (2022). Hydro-thermodynamic dataset of the Amazon River Plume and North Brazil Current retroflection. Data in Brief, 40. https://doi.org/10.17882/82958"
  }
]